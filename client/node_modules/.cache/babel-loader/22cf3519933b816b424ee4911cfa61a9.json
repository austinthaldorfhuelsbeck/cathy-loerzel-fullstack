{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/GitHub/cathy-loerzel/client/src/Layout/Components/UpcomingEvents/UpcomingEvents.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport AccordionItem from \"./AccordionItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpcomingEvents({\n  type\n}) {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [err, setErr] = useState(\"\");\n  const location = useLocation();\n  useEffect(() => {\n    let url = `${process.env.REACT_APP_API_BASE_URL}/events`;\n    fetch(url).then(res => res.json()).then(res => setEvents(res.data)).catch(setErr);\n  }, []);\n\n  const capitalizeFirstLetter = string => string.charAt(0).toUpperCase() + string.slice(1);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [err, /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"lg-title\",\n      children: [\"Upcoming \", type ? capitalizeFirstLetter(type) : Events]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-5\",\n      children: events.filter(event => event.isUpcoming).slice(location.pathname === \"/events\" ? \"()\" : \"(0, 3)\").map(event => event.isUpcoming && /*#__PURE__*/_jsxDEV(AccordionItem, {\n        item: event\n      }, event.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpcomingEvents, \"XJGnrl8wreDOACIIDaqQEHyHi4A=\", false, function () {\n  return [useLocation];\n});\n\n_c = UpcomingEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpcomingEvents\");","map":{"version":3,"sources":["/Users/dev/Documents/GitHub/cathy-loerzel/client/src/Layout/Components/UpcomingEvents/UpcomingEvents.jsx"],"names":["useState","useEffect","useLocation","AccordionItem","UpcomingEvents","type","events","setEvents","err","setErr","location","url","process","env","REACT_APP_API_BASE_URL","fetch","then","res","json","data","catch","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Events","filter","event","isUpcoming","pathname","map","title"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAkC;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,SAAhD;AACAC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESC,GAAD,IAASV,SAAS,CAACU,GAAG,CAACE,IAAL,CAF1B,EAGGC,KAHH,CAGSX,MAHT;AAID,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMY,qBAAqB,GAAIC,MAAD,IAC5BA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CADnC;;AAIA,sBACE;AAAA,eACGjB,GADH,eAEE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,8BAAmCH,IAAI,GAAGgB,qBAAqB,CAAChB,IAAD,CAAxB,GAAiCqB,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACGpB,MAAM,CACJqB,MADF,CACUC,KAAD,IAAWA,KAAK,CAACC,UAD1B,EAEEJ,KAFF,CAEQf,QAAQ,CAACoB,QAAT,KAAsB,SAAtB,GAAkC,IAAlC,GAAyC,QAFjD,EAGEC,GAHF,CAGOH,KAAD,IACHA,KAAK,CAACC,UAAN,iBAAoB,QAAC,aAAD;AAAiC,QAAA,IAAI,EAAED;AAAvC,SAAoBA,KAAK,CAACI,KAA1B;AAAA;AAAA;AAAA;AAAA,cAJvB;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAcD;;GA/BuB5B,c;UAGLF,W;;;KAHKE,c","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\"\nimport AccordionItem from \"./AccordionItem\"\n\nexport default function UpcomingEvents({ type }) {\n  const [events, setEvents] = useState([])\n  const [err, setErr] = useState(\"\")\n  const location = useLocation()\n\n  useEffect(() => {\n    let url = `${process.env.REACT_APP_API_BASE_URL}/events`\n    fetch(url)\n      .then(res => res.json())\n      .then((res) => setEvents(res.data))\n      .catch(setErr)\n  }, [])\n\n  const capitalizeFirstLetter = (string) => (\n    string.charAt(0).toUpperCase() + string.slice(1)\n  )\n\n  return (\n    <>\n      {err}\n      <h3 className=\"lg-title\">Upcoming {type ? capitalizeFirstLetter(type) : Events}</h3>\n      <div className=\"my-5\">\n        {events\n          .filter((event) => event.isUpcoming)\n          .slice(location.pathname === \"/events\" ? \"()\" : \"(0, 3)\")\n          .map((event) => (\n            event.isUpcoming && <AccordionItem key={event.title} item={event} />\n        ))}\n      </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}